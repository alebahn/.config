#!/usr/bin/bash

cmd="$1"; shift

# set -x

#if no command is given, print usage and exit
if [ -z "$cmd" ]; then
  echo "Usage: git-indexed.sh <command> [<args>]"
  echo "Example: git-indexed.sh add 1 2 3"
  echo "This will run 'git add' on the files indexed by numbers 1, 2, and 3."
  exit 1
fi

root_path="$(git rev-parse --show-toplevel)"

args=()
for arg in "$@"; do
  #if arg is numeric, convert it to a file:
  if [[ "$arg" =~ ^[0-9]+$ ]]; then
    file=$(
      git status --porcelain -z | \
        awk -v RS='\0' -v arg="$arg" '
          BEGIN { ns = nu = nt = 0 }
          /^[MTADRCU]/  { staged[++ns]    = substr($0, 4) }
          /^.[MTADRCU]/ { unstaged[++nu]  = substr($0, 4) }
          /^\?\?/       { untracked[++nt] = substr($0, 4) }
          END {
            count = 0
            for (i = 1; i <= ns; i++) { if (++count == arg) { print staged[i]; exit } }
            for (i = 1; i <= nu; i++) { if (++count == arg) { print unstaged[i]; exit } }
            for (i = 1; i <= nt; i++) { if (++count == arg) { print untracked[i]; exit } }
          }'
        )

    args+=("$root_path/$file")
  #otherwise, pass it through as is
  else
    args+=("$arg")
  fi
done

# echo "$cmd" "${args[@]}"
git "$cmd" "${args[@]}"
